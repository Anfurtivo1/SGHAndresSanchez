<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        mIaFG+o55lxRRRRUiYiiiihCKKKKEIooooQv/9k=
</value>
  </data>
</root>